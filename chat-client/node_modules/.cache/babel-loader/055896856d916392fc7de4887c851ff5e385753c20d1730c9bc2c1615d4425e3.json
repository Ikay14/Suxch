{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./Login.css';import{socketService}from'../../services/socket';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[isLoading,setIsLoading]=useState(false);const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();setError('');setIsLoading(true);try{var _data$accessToken;// 1. First perform the login request\nconst response=await fetch('http://localhost:8080/api/v1/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password}),credentials:'include'// Important: include credentials\n});if(!response.ok){throw new Error('Invalid credentials');}const data=await response.json();console.log('Login successful, token received:',{tokenExists:!!data.accessToken,tokenLength:(_data$accessToken=data.accessToken)===null||_data$accessToken===void 0?void 0:_data$accessToken.length,userId:data.responsePayload.id,fullname:data.responsePayload.fullname});// 2. Store the auth data\nlocalStorage.setItem('token',data.accessToken);localStorage.setItem('userId',data.responsePayload.id);localStorage.setItem('username',data.responsePayload.fullname);// Set token as cookie as well\ndocument.cookie=`accessToken=${data.accessToken}; path=/`;// 3. Initialize Socket connection with delay to ensure cookie is set\ntry{console.log('Attempting socket connection...');// Small delay to ensure cookie is set\nawait new Promise(resolve=>setTimeout(resolve,100));await socketService.initializeSocket(data.accessToken);console.log('Socket connection successful');// 4. Navigate to chat on successful connection\nnavigate(`/chat/${data.responsePayload.id}`);}catch(error){console.error('Socket connection error:',error);setError('Failed to establish chat connection. Please try again.');// Clear stored data on socket connection failure\nlocalStorage.removeItem('token');localStorage.removeItem('userId');localStorage.removeItem('username');document.cookie='accessToken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';// Disconnect socket if it exists\nsocketService.disconnect();}}catch(error){console.error('Login error:',error);setError(error instanceof Error?error.message:'An unknown error occurred');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),disabled:isLoading,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),disabled:isLoading,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,children:isLoading?'Logging in...':'Login'})]})});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","socketService","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleLogin","e","preventDefault","_data$accessToken","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","data","json","console","log","tokenExists","accessToken","tokenLength","length","userId","responsePayload","id","fullname","localStorage","setItem","document","cookie","Promise","resolve","setTimeout","initializeSocket","removeItem","disconnect","message","className","children","onSubmit","type","placeholder","value","onChange","target","disabled","required"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { loginResponse } from 'src/types';\r\nimport './Login.css';\r\nimport { socketService } from '../../services/socket';\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<string>('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n  \r\n    const handleLogin = async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setError('');\r\n      setIsLoading(true);\r\n      \r\n      try {\r\n        // 1. First perform the login request\r\n        const response = await fetch('http://localhost:8080/api/v1/auth/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, password }),\r\n          credentials: 'include'  // Important: include credentials\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Invalid credentials');\r\n        }\r\n  \r\n        const data: loginResponse = await response.json();\r\n        \r\n        console.log('Login successful, token received:', {\r\n          tokenExists: !!data.accessToken,\r\n          tokenLength: data.accessToken?.length,\r\n          userId: data.responsePayload.id,\r\n          fullname: data.responsePayload.fullname\r\n        });\r\n        \r\n        // 2. Store the auth data\r\n        localStorage.setItem('token', data.accessToken);\r\n        localStorage.setItem('userId', data.responsePayload.id);\r\n        localStorage.setItem('username', data.responsePayload.fullname);\r\n        \r\n        // Set token as cookie as well\r\n        document.cookie = `accessToken=${data.accessToken}; path=/`;\r\n  \r\n        // 3. Initialize Socket connection with delay to ensure cookie is set\r\n        try {\r\n          console.log('Attempting socket connection...');\r\n          // Small delay to ensure cookie is set\r\n          await new Promise(resolve => setTimeout(resolve, 100));\r\n          await socketService.initializeSocket(data.accessToken);\r\n          console.log('Socket connection successful');\r\n          // 4. Navigate to chat on successful connection\r\n          navigate(`/chat/${data.responsePayload.id}`);\r\n        } catch (error) {\r\n          console.error('Socket connection error:', error);\r\n          setError('Failed to establish chat connection. Please try again.');\r\n          // Clear stored data on socket connection failure\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('userId');\r\n          localStorage.removeItem('username');\r\n          document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';\r\n          // Disconnect socket if it exists\r\n          socketService.disconnect();\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        setError(error instanceof Error ? error.message : 'An unknown error occurred');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    return ( \r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n                <h2>Login</h2>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    disabled={isLoading}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    disabled={isLoading}\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={isLoading}>\r\n                    {isLoading ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}