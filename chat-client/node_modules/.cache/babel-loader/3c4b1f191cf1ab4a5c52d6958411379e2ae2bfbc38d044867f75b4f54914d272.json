{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket'; // Assuming this is the socket service you have set up\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    receiverId,\n    senderId\n  } = useParams();\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          await socketService.initializeSocket(token, senderId);\n        } catch (error) {\n          console.error('Error initializing socket:', error);\n        }\n      }\n    };\n    initializeSocket();\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    var _socketService$getSoc;\n    // Listen for incoming messages\n    (_socketService$getSoc = socketService.getSocket()) === null || _socketService$getSoc === void 0 ? void 0 : _socketService$getSoc.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', message => {\n        console.log('New message received:', message);\n        setMessages(prevMessages => [...prevMessages, `${message.senderId}: ${message.content}`]);\n      });\n    }\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage\n    };\n    console.log('Sending message payload:', payload);\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n    socket.emit('send_message', payload, response => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n\n    // Temporarily show the message in the UI\n    setMessages(prevMessages => [...prevMessages, `You: ${newMessage}`]);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with User \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.startsWith('You') ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"send-button\",\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"0heI3HKuctyNk+YEYnJE+TPFlgk=\", false, function () {\n  return [useParams, useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","socketService","jsxDEV","_jsxDEV","ChatWindow","_s","userId","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","receiverId","senderId","initializeSocket","token","localStorage","getItem","error","console","log","socket","getSocket","off","disconnect","_socketService$getSoc","on","message","prevMessages","content","sendMessage","e","preventDefault","trim","payload","connected","emit","response","status","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","startsWith","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket'; // Assuming this is the socket service you have set up\nimport './ChatWindow.css';\n\nconst ChatWindow: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [messages, setMessages] = useState<string[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { receiverId, senderId } = useParams<{ receiverId: string; senderId: string }>();\n\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          await socketService.initializeSocket(token, senderId);\n        } catch (error) {\n          console.error('Error initializing socket:', error);\n        }\n      }\n    };\n  \n    initializeSocket();\n  \n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n  \n\n  useEffect(() => {\n    // Listen for incoming messages\n    socketService.getSocket()?.on('message', (message: string) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', (message: any) => {\n        console.log('New message received:', message);\n        setMessages((prevMessages) => [...prevMessages, `${message.senderId}: ${message.content}`]);\n      });\n    }\n\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage,\n    };\n\n    console.log('Sending message payload:', payload);\n\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n\n    socket.emit('send_message', payload, (response: any) => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n\n    // Temporarily show the message in the UI\n    setMessages((prevMessages) => [...prevMessages, `You: ${newMessage}`]);\n    setNewMessage('');\n  };\n  \n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <h2>Chat with User {userId}</h2>\n      </div>\n      <div className=\"messages\">\n        {messages.length === 0 ? (\n          <p>No messages yet</p>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={`message ${message.startsWith('You') ? 'sent' : 'received'}`}>\n              <p>{message}</p>\n            </div>\n          ))\n        )}\n      </div>\n\n      <form onSubmit={sendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading} className=\"send-button\">\n          {isLoading ? 'Sending...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}