{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Auth\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Login.css';\nimport { socketService } from '../../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      var _data$accessToken;\n      // 1. First perform the login request\n      const response = await fetch('http://localhost:8080/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Invalid credentials');\n      }\n      const data = await response.json();\n      console.log('Login successful, token received:', {\n        tokenExists: !!data.accessToken,\n        tokenLength: (_data$accessToken = data.accessToken) === null || _data$accessToken === void 0 ? void 0 : _data$accessToken.length,\n        userId: data.responsePayload.id,\n        fullname: data.responsePayload.fullname\n      });\n\n      // 2. Store the auth data\n      localStorage.setItem('token', data.accessToken);\n      localStorage.setItem('userId', data.responsePayload.id);\n      localStorage.setItem('username', data.responsePayload.fullname);\n\n      // 3. Initialize Socket connection\n      try {\n        await socketService.initializeSocket(data.accessToken);\n        // 4. Navigate to chat on successful connection\n        history.push(`/chat/${data.responsePayload.id}`);\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        setError('Failed to establish chat connection. Please try again.');\n        // Clear stored data on socket connection failure\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('username');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError(error instanceof Error ? error.message : 'An unknown error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"5l3u1hJjHlDHq9WpgLpTa4YJXyw=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","socketService","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","history","handleLogin","e","preventDefault","_data$accessToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","tokenExists","accessToken","tokenLength","length","userId","responsePayload","id","fullname","localStorage","setItem","initializeSocket","push","removeItem","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { loginResponse } from 'src/types';\r\nimport './Login.css';\r\nimport { socketService } from '../../services/socket';\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<string>('');\r\n    const history = useHistory();\r\n  \r\n    const handleLogin = async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setError('');\r\n      \r\n      try {\r\n        // 1. First perform the login request\r\n        const response = await fetch('http://localhost:8080/api/v1/auth/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Invalid credentials');\r\n        }\r\n  \r\n        const data: loginResponse = await response.json();\r\n        \r\n        console.log('Login successful, token received:', {\r\n          tokenExists: !!data.accessToken,\r\n          tokenLength: data.accessToken?.length,\r\n          userId: data.responsePayload.id,\r\n          fullname: data.responsePayload.fullname\r\n        });\r\n        \r\n        // 2. Store the auth data\r\n        localStorage.setItem('token', data.accessToken);\r\n        localStorage.setItem('userId', data.responsePayload.id);\r\n        localStorage.setItem('username', data.responsePayload.fullname);\r\n  \r\n        // 3. Initialize Socket connection\r\n        try {\r\n          await socketService.initializeSocket(data.accessToken);\r\n          // 4. Navigate to chat on successful connection\r\n          history.push(`/chat/${data.responsePayload.id}`);\r\n        } catch (error) {\r\n          console.error('Socket connection error:', error);\r\n          setError('Failed to establish chat connection. Please try again.');\r\n          // Clear stored data on socket connection failure\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('userId');\r\n          localStorage.removeItem('username');\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        setError(error instanceof Error ? error.message : 'An unknown error occurred');\r\n      }\r\n    };\r\n\r\n    return ( \r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n                <h2>Login</h2>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}