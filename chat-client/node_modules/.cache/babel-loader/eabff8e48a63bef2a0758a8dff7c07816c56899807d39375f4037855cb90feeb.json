{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    receiverId,\n    senderId\n  } = useParams();\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          console.log('Initializing WebSocket with token and senderId:', token, senderId);\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n    initializeSocket();\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    var _socketService$getSoc;\n    // Listen for incoming messages\n    (_socketService$getSoc = socketService.getSocket()) === null || _socketService$getSoc === void 0 ? void 0 : _socketService$getSoc.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', message => {\n        console.log('New message received:', message);\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n    }\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage\n    };\n    console.log('Sending message payload:', payload);\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n    socket.emit('send_message', payload, response => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n        // Add the sent message to the state\n        setMessages(prevMessages => [...prevMessages, {\n          messageId: response.data.messageId,\n          senderId,\n          receiverId,\n          content: newMessage,\n          createdAt: new Date().toISOString()\n        }]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with User \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === 'You' ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [message.senderId, \": \", message.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"send-button\",\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"0heI3HKuctyNk+YEYnJE+TPFlgk=\", false, function () {\n  return [useParams, useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","socketService","jsxDEV","_jsxDEV","ChatWindow","_s","userId","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","receiverId","senderId","initializeSocket","token","localStorage","getItem","console","log","error","socket","getSocket","off","disconnect","_socketService$getSoc","on","message","prevMessages","sendMessage","e","preventDefault","trim","payload","content","connected","emit","response","status","data","messageId","createdAt","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';  \nimport './ChatWindow.css';\nimport MessageList from './MessageList';\n\ninterface Message {\n  senderId: string;\n  content: string;\n}\n\nconst ChatWindow: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { receiverId, senderId } = useParams<{ receiverId: string; senderId: string }>();\n\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          console.log('Initializing WebSocket with token and senderId:', token, senderId);\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n\n    initializeSocket();\n\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socketService.getSocket()?.on('message', (message: string) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', (message: Message) => {\n        console.log('New message received:', message);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n    }\n\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage,\n    };\n\n    console.log('Sending message payload:', payload);\n\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n\n    socket.emit('send_message', payload, (response: any) => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n        // Add the sent message to the state\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            messageId: response.data.messageId,\n            senderId,\n            receiverId,\n            content: newMessage,\n            createdAt: new Date().toISOString(),\n          },\n        ]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n\n    setNewMessage('');\n  };\n  \n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <h2>Chat with User {userId}</h2>\n      </div>\n      <div className=\"messages\">\n        {messages.length === 0 ? (\n          <p>No messages yet</p>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={`message ${message.senderId === 'You' ? 'sent' : 'received'}`}>\n              <p>{message.senderId}: {message.content}</p>\n            </div>\n          ))\n        )}\n      </div>\n\n      <form onSubmit={sendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading} className=\"send-button\">\n          {isLoading ? 'Sending...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}