{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    receiverId,\n    senderId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          console.log('Initializing WebSocket with token and senderId:', token, senderId);\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n    initializeSocket();\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', message => {\n        console.log('New message received:', message);\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n    }\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage\n    };\n    console.log('Sending message payload:', payload);\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n    socket.emit('send_message', payload, response => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n        setMessages(prevMessages => [...prevMessages, {\n          id: response.data.messageId,\n          chatId: `${senderId}-${receiverId}`,\n          senderId,\n          receiverId,\n          content: newMessage,\n          timestamp: new Date() // Use a Date object instead of a string\n        }]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with User \", receiverId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUserId: senderId || '',\n        receiverId: receiverId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"send-button\",\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"lzuGuSQLhqmrD9HWlYaUJcl+D54=\", false, function () {\n  return [useParams, useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","socketService","MessageList","jsxDEV","_jsxDEV","ChatWindow","_s","userId","receiverId","senderId","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","initializeSocket","token","localStorage","getItem","console","log","error","socket","getSocket","off","disconnect","on","message","prevMessages","sendMessage","e","preventDefault","trim","payload","content","connected","emit","response","status","data","id","messageId","chatId","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport type { Message } from '../../types/index';\n\nconst ChatWindow: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { receiverId, senderId } = useParams<{ receiverId: string; senderId: string }>();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          console.log('Initializing WebSocket with token and senderId:', token, senderId);\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n\n    initializeSocket();\n\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', (message: Message) => {\n        console.log('New message received:', message);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n    }\n\n    return () => {\n      if (socket) {\n        console.log('Cleaning up new_message listener');\n        socket.off('new_message');\n      }\n    };\n  }, []);\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n\n    if (!receiverId || !senderId) {\n      console.error('Missing sender or receiver ID');\n      return;\n    }\n\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage,\n    };\n\n    console.log('Sending message payload:', payload);\n\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n\n    socket.emit('send_message', payload, (response: any) => {\n      if (response.status === 'success') {\n        console.log('Message sent successfully:', response.data);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            id: response.data.messageId,\n            chatId: `${senderId}-${receiverId}`,\n            senderId,\n            receiverId,\n            content: newMessage,\n            timestamp: new Date(), // Use a Date object instead of a string\n          },\n        ]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n\n    setNewMessage('');\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <h2>Chat with User {receiverId}</h2>\n      </div>\n      <div className=\"messages\">\n        <MessageList messages={messages} currentUserId={senderId || ''} receiverId={receiverId} />\n      </div>\n      <form onSubmit={sendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading} className=\"send-button\">\n          {isLoading ? 'Sending...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}