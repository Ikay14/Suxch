{"ast":null,"code":"import io from 'socket.io-client';\nconst SOCKET_SERVER_URL = 'http://localhost:8080/chat'; // Replace with your server URL\nlet socket = null;\nexport const connectSocket = () => {\n  if (!socket) {\n    socket = io(SOCKET_SERVER_URL, {\n      transports: ['websocket', 'polling'],\n      // Ensure WebSocket is used as the primary transport\n      withCredentials: true // Allow cross-origin credentials\n    });\n    socket.emit('test_ping', {\n      message: 'Can you hear me?'\n    });\n    socket.on('connect', () => {\n      var _socket;\n      console.log('Connected to socket server:', (_socket = socket) === null || _socket === void 0 ? void 0 : _socket.id);\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from socket server');\n    });\n  }\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\nexport const sendMessage = message => {\n  if (socket) {\n    socket.emit('message', message);\n  } else {\n    console.error('Socket is not connected');\n  }\n};\nexport const onMessageReceived = callback => {\n  if (socket) {\n    socket.on('message', callback);\n  }\n};\nexport const uploadFile = fileData => {\n  if (socket) {\n    socket.emit('fileUpload', fileData);\n  }\n};\nexport const onFileUploaded = callback => {\n  if (socket) {\n    socket.on('fileUploaded', callback);\n  }\n};\nexport const joinRoom = roomId => {\n  if (socket) {\n    socket.emit('joinRoom', {\n      roomId\n    });\n  }\n};\nexport const leaveRoom = roomId => {\n  if (socket) {\n    socket.emit('leaveRoom', {\n      roomId\n    });\n  }\n};\nexport const onUserJoined = callback => {\n  if (socket) {\n    socket.on('user-joined', callback);\n  }\n};\nexport const onUserLeft = callback => {\n  if (socket) {\n    socket.on('user-left', callback);\n  }\n};\nexport const acknowledgeMessage = messageId => {\n  if (socket) {\n    socket.emit('acknowledge', {\n      messageId\n    });\n  }\n};\nexport const onAcknowledged = callback => {\n  if (socket) {\n    socket.on('acknowledged', callback);\n  }\n};\nexport const sendTyping = typingData => {\n  if (socket) {\n    socket.emit('typing', typingData);\n  }\n};\nexport const stopTyping = typingData => {\n  if (socket) {\n    socket.emit('stop_typing', typingData);\n  }\n};\nexport const onTyping = callback => {\n  if (socket) {\n    socket.on('typing', callback);\n  }\n};\nexport const onStopTyping = callback => {\n  if (socket) {\n    socket.on('stop_typing', callback);\n  }\n};\nexport const sendReadReceipt = readReceiptData => {\n  if (socket) {\n    socket.emit('read_receipt', readReceiptData);\n  }\n};\nexport const onMessageRead = callback => {\n  if (socket) {\n    socket.on('message_read', callback);\n  }\n};\nexport default socket;","map":{"version":3,"names":["io","SOCKET_SERVER_URL","socket","connectSocket","transports","withCredentials","emit","message","on","_socket","console","log","id","error","disconnectSocket","disconnect","sendMessage","onMessageReceived","callback","uploadFile","fileData","onFileUploaded","joinRoom","roomId","leaveRoom","onUserJoined","onUserLeft","acknowledgeMessage","messageId","onAcknowledged","sendTyping","typingData","stopTyping","onTyping","onStopTyping","sendReadReceipt","readReceiptData","onMessageRead"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/services/socket.ts"],"sourcesContent":["import io, { Socket } from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:8080/chat'; // Replace with your server URL\nlet socket: Socket | null = null;\n\nexport const connectSocket = () => {\n    if (!socket) {\n        socket = io(SOCKET_SERVER_URL, {\n            transports: ['websocket', 'polling'], // Ensure WebSocket is used as the primary transport\n            withCredentials: true,    // Allow cross-origin credentials\n        });\n\n\n        socket.emit('test_ping', { message: 'Can you hear me?' });\n\n        socket.on('connect', () => {\n            console.log('Connected to socket server:', socket?.id);\n        });\n\n        socket.on('connect_error', (error) => {\n            console.error('Socket connection error:', error);\n        });\n\n        socket.on('disconnect', () => {\n            console.log('Disconnected from socket server');\n        });\n    }\n};\n\nexport const disconnectSocket = () => {\n    if (socket) {\n        socket.disconnect();\n        socket = null;\n    }\n};\n\nexport const sendMessage = (message: { text: string; userId: string }) => {\n    if (socket) {\n        socket.emit('message', message);\n    } else {\n        console.error('Socket is not connected');\n    }\n};\n\nexport const onMessageReceived = (callback: (message: any) => void) => {\n    if (socket) {\n        socket.on('message', callback);\n    }\n};\n\nexport const uploadFile = (fileData: any) => {\n    if (socket) {\n        socket.emit('fileUpload', fileData);\n    }\n};\n\nexport const onFileUploaded = (callback: (response: any) => void) => {\n    if (socket) {\n        socket.on('fileUploaded', callback);\n    }\n};\n\nexport const joinRoom = (roomId: string) => {\n    if (socket) {\n        socket.emit('joinRoom', { roomId });\n    }\n};\n\nexport const leaveRoom = (roomId: string) => {\n    if (socket) {\n        socket.emit('leaveRoom', { roomId });\n    }\n};\n\nexport const onUserJoined = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('user-joined', callback);\n    }\n};\n\nexport const onUserLeft = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('user-left', callback);\n    }\n};\n\nexport const acknowledgeMessage = (messageId: string) => {\n    if (socket) {\n        socket.emit('acknowledge', { messageId });\n    }\n};\n\nexport const onAcknowledged = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('acknowledged', callback);\n    }\n};\n\nexport const sendTyping = (typingData: { senderId: string; receiverId: string; chatId: string }) => {\n    if (socket) {\n        socket.emit('typing', typingData);\n    }\n};\n\nexport const stopTyping = (typingData: { senderId: string; receiverId: string }) => {\n    if (socket) {\n        socket.emit('stop_typing', typingData);\n    }\n};\n\nexport const onTyping = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('typing', callback);\n    }\n};\n\nexport const onStopTyping = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('stop_typing', callback);\n    }\n};\n\nexport const sendReadReceipt = (readReceiptData: { messageId: string; receiverId: string }) => {\n    if (socket) {\n        socket.emit('read_receipt', readReceiptData);\n    }\n};\n\nexport const onMessageRead = (callback: (data: any) => void) => {\n    if (socket) {\n        socket.on('message_read', callback);\n    }\n};\n\nexport default socket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}