{"ast":null,"code":"const API_BASE_URL='http://localhost:8080/api/v1';export const login=async(email,password)=>{try{const response=await fetch(`${API_BASE_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Login failed');}const data=await response.json();// Optionally store token in localStorage or cookie\nlocalStorage.setItem('token',data.token);return'Login successful';}catch(error){throw new Error('An unexpected error occurred');}};export const logout=async()=>{// If logout is handled server-side\n// await fetch(`${API_BASE_URL}/auth/logout`, { method: 'POST' });\n// Clear stored token on client\nlocalStorage.removeItem('token');return'Logout successful';};export const register=async(email,password)=>{try{const response=await fetch(`${API_BASE_URL}/auth/register`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Registration failed');}const data=await response.json();return'Registration successful';}catch(error){throw new Error('An unexpected error occurred');}};","map":{"version":3,"names":["API_BASE_URL","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","localStorage","setItem","token","error","logout","removeItem","register"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/services/auth.ts"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8080/api/v1'; \n\nexport const login = async (email: string, password: string): Promise<string> => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || 'Login failed');\n        }\n\n        const data = await response.json();\n\n        // Optionally store token in localStorage or cookie\n        localStorage.setItem('token', data.token);\n\n        return 'Login successful';\n    } catch (error) {\n        throw new Error('An unexpected error occurred');\n    }\n};\n\nexport const logout = async (): Promise<string> => {\n    // If logout is handled server-side\n    // await fetch(`${API_BASE_URL}/auth/logout`, { method: 'POST' });\n\n    // Clear stored token on client\n    localStorage.removeItem('token');\n\n    return 'Logout successful';\n};\n\nexport const register = async (email: string, password: string): Promise<string> => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/auth/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || 'Registration failed');\n        }\n\n        const data = await response.json();\n\n        return 'Registration successful';\n    } catch (error) {\n        throw new Error('An unexpected error occurred');\n    }\n};\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,8BAA8B,CAEnD,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAsB,CAC7E,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,aAAa,CAAE,CACvDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC5C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,cAAc,CAAC,CACxD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACS,IAAI,CAAC,CAAC,CAElC;AACAI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,IAAI,CAACG,KAAK,CAAC,CAEzC,MAAO,kBAAkB,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACZ,KAAM,IAAI,CAAAN,KAAK,CAAC,8BAA8B,CAAC,CACnD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAO,MAAM,CAAG,KAAAA,CAAA,GAA6B,CAC/C;AACA;AAEA;AACAJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAEhC,MAAO,mBAAmB,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOrB,KAAa,CAAEC,QAAgB,GAAsB,CAChF,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,gBAAgB,CAAE,CAC1DM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC5C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,qBAAqB,CAAC,CAC/D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAZ,QAAQ,CAACS,IAAI,CAAC,CAAC,CAElC,MAAO,yBAAyB,CACpC,CAAE,MAAOO,KAAK,CAAE,CACZ,KAAM,IAAI,CAAAN,KAAK,CAAC,8BAA8B,CAAC,CACnD,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}