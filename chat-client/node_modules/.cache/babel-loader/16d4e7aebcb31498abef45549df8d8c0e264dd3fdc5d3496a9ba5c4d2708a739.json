{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Auth\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { socketService } from '../../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Perform login request\n      const response = await fetch('http://localhost:8080/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Invalid credentials');\n      const data = await response.json();\n\n      // Store authentication data\n      localStorage.setItem('token', data.accessToken);\n      localStorage.setItem('userId', data.responsePayload.id);\n      localStorage.setItem('username', data.responsePayload.fullname);\n\n      // Set cookie with SameSite policy\n      document.cookie = `accessToken=${data.accessToken}; Path=/; SameSite=None` + (window.location.protocol === 'https:' ? '; Secure' : '');\n\n      // Initialize socket with retry logic\n      let retries = 0;\n      const maxRetries = 3;\n      while (retries < maxRetries) {\n        try {\n          await socketService.initializeSocket(data.accessToken);\n          navigate(`/chat/${data.responsePayload.id}`);\n          return;\n        } catch (err) {\n          retries++;\n          if (retries === maxRetries) throw err;\n          await new Promise(resolve => setTimeout(resolve, 1000 * retries));\n        }\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError(error instanceof Error ? error.message : 'Login failed');\n      // Clean up on failure\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('username');\n      document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';\n      socketService.disconnect();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const token = localStorage.getItem('token');\n  console.log('Retrieved token:', token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: isLoading,\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: isLoading,\n          required: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"submit-button\",\n        children: isLoading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ujrlkl/E0aUOvILAlibsOQmX/rs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","socketService","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","data","json","localStorage","setItem","accessToken","responsePayload","id","fullname","document","cookie","window","location","protocol","retries","maxRetries","initializeSocket","err","Promise","resolve","setTimeout","console","message","removeItem","disconnect","token","getItem","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { loginResponse } from 'src/types';\r\nimport './Login.css';\r\nimport { socketService } from '../../services/socket';\r\n\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Perform login request\r\n      const response = await fetch('http://localhost:8080/api/v1/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Invalid credentials');\r\n\r\n      const data: loginResponse = await response.json();\r\n\r\n      // Store authentication data\r\n      localStorage.setItem('token', data.accessToken);\r\n      localStorage.setItem('userId', data.responsePayload.id);\r\n      localStorage.setItem('username', data.responsePayload.fullname);\r\n\r\n      // Set cookie with SameSite policy\r\n      document.cookie = `accessToken=${data.accessToken}; Path=/; SameSite=None` +\r\n        (window.location.protocol === 'https:' ? '; Secure' : '');\r\n\r\n      // Initialize socket with retry logic\r\n      let retries = 0;\r\n      const maxRetries = 3;\r\n\r\n      while (retries < maxRetries) {\r\n        try {\r\n          await socketService.initializeSocket(data.accessToken);\r\n          navigate(`/chat/${data.responsePayload.id}`);\r\n          return;\r\n        } catch (err) {\r\n          retries++;\r\n          if (retries === maxRetries) throw err;\r\n          await new Promise(resolve => setTimeout(resolve, 1000 * retries));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError(error instanceof Error ? error.message : 'Login failed');\r\n      // Clean up on failure\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userId');\r\n      localStorage.removeItem('username');\r\n      document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';\r\n      socketService.disconnect();\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const token = localStorage.getItem('token');\r\n  console.log('Retrieved token:', token);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleLogin} className=\"login-form\">\r\n        <h2>Login</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n            className=\"input-field\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n            className=\"input-field\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\r\n          {isLoading ? 'Logging in...' : 'Login'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}