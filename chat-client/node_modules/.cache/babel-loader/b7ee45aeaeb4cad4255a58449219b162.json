{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  try {\n    console.log('Sending login request with:', {\n      email,\n      password\n    });\n    const response = await fetch('http://localhost:8080/api/v1/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n      // credentials: 'include' // Uncomment if using cookies\n    });\n    console.log('Response status:', response.status);\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error('Login failed - server response:', errorData);\n      throw new Error(errorData.message || 'Login failed');\n    }\n    const data = await response.json();\n    console.log('Login successful - data:', data);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('userId', data.user.id);\n    localStorage.setItem('username', data.user.username);\n    history.push(`/chat/${data.user.id}`);\n  } catch (error) {\n    console.error('Login error:', error);\n    alert(`Login failed: ${error instanceof Error ? error.message : 'Please check console for details'}`);\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","console","log","email","password","response","fetch","method","headers","body","JSON","stringify","status","ok","errorData","json","error","Error","message","data","localStorage","setItem","token","user","id","username","history","push","alert"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Auth/Login.tsx"],"sourcesContent":["const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n        console.log('Sending login request with:', { email, password });\r\n        \r\n        const response = await fetch('http://localhost:8080/api/v1/auth/login', {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n            // credentials: 'include' // Uncomment if using cookies\r\n        });\r\n\r\n        console.log('Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            console.error('Login failed - server response:', errorData);\r\n            throw new Error(errorData.message || 'Login failed');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Login successful - data:', data);\r\n        \r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('userId', data.user.id);\r\n        localStorage.setItem('username', data.user.username);\r\n        \r\n        history.push(`/chat/${data.user.id}`);\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        alert(`Login failed: ${error instanceof Error ? error.message : 'Please check console for details'}`);\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAkB,IAAK;EAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAE/D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;MACxC;IACJ,CAAC,CAAC;IAEFH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,QAAQ,CAACO,MAAM,CAAC;IAEhD,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCd,OAAO,CAACe,KAAK,CAAC,iCAAiC,EAAEF,SAAS,CAAC;MAC3D,MAAM,IAAIG,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,cAAc,CAAC;IACxD;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCd,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEiB,IAAI,CAAC;IAE7CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;IACzCF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACI,IAAI,CAACC,EAAE,CAAC;IAC5CJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACI,IAAI,CAACE,QAAQ,CAAC;IAEpDC,OAAO,CAACC,IAAI,CAAC,SAASR,IAAI,CAACI,IAAI,CAACC,EAAE,EAAE,CAAC;EACzC,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZf,OAAO,CAACe,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpCY,KAAK,CAAC,iBAAiBZ,KAAK,YAAYC,KAAK,GAAGD,KAAK,CAACE,OAAO,GAAG,kCAAkC,EAAE,CAAC;EACzG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}