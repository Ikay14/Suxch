{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\MessageList.tsx\";\nimport React from 'react';\nimport './MessageList.css'; // Consider adding a separate CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages,\n  currentUserId\n}) => {\n  // Format time in a more readable way\n  const formatTime = dateString => {\n    if (!dateString) return 'Unknown time';\n    const date = new Date(dateString);\n    return isNaN(date.getTime()) ? 'Unknown time' : date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: \"No messages yet. Start the conversation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.system ? 'system-message' : message.senderId === currentUserId ? 'sent' : 'received'}`,\n      children: [message.senderId !== currentUserId && !message.system && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-sender\",\n        children: [message.senderAvatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.senderAvatar,\n          alt: message.senderName || 'User',\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, this), message.senderName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender-name\",\n          children: message.senderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [message.fileUrl ? message.fileUrl.match(/\\.(jpeg|jpg|gif|png)$/) ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.fileUrl,\n          alt: \"Attachment\",\n          className: \"message-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          href: message.fileUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Download file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-time\",\n          children: message.createdAt ? formatTime(message.createdAt) : 'Unknown time'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, message.id || message.messageId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","messages","currentUserId","formatTime","dateString","date","Date","isNaN","getTime","toLocaleTimeString","hour","minute","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","message","system","senderId","senderAvatar","src","alt","senderName","fileUrl","match","href","target","rel","content","createdAt","id","messageId","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/MessageList.tsx"],"sourcesContent":["import React from 'react';\nimport { Message } from '../../types';\nimport './MessageList.css'; // Consider adding a separate CSS file\n\ninterface MessageListProps {\n    messages: Message[];\n    currentUserId: string; // To properly identify sent vs received messages\n}\n\nconst MessageList: React.FC<MessageListProps> = ({ messages, currentUserId }) => {\n    // Format time in a more readable way\n    const formatTime = (dateString: string | Date | undefined) => {\n        if (!dateString) return 'Unknown time';\n        const date = new Date(dateString);\n        return isNaN(date.getTime()) ? 'Unknown time' : date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    };\n\n    return (\n        <div className=\"message-list\">\n            {messages.length === 0 ? (\n                <div className=\"no-messages\">No messages yet. Start the conversation!</div>\n            ) : (\n                messages.map((message) => (\n                    <div \n                        key={message.id || message.messageId} \n                        className={`message ${message.system ? 'system-message' : message.senderId === currentUserId ? 'sent' : 'received'}`}\n                    >\n                        {message.senderId !== currentUserId && !message.system && (\n                            <div className=\"message-sender\">\n                                {message.senderAvatar && (\n                                    <img \n                                        src={message.senderAvatar} \n                                        alt={message.senderName || 'User'} \n                                        className=\"avatar\"\n                                    />\n                                )}\n                                {message.senderName && (\n                                    <span className=\"sender-name\">{message.senderName}</span>\n                                )}\n                            </div>\n                        )}\n                        <div className=\"message-content\">\n                            {message.fileUrl ? (\n                                message.fileUrl.match(/\\.(jpeg|jpg|gif|png)$/) ? (\n                                    <img src={message.fileUrl} alt=\"Attachment\" className=\"message-image\" />\n                                ) : (\n                                    <a href={message.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        Download file\n                                    </a>\n                                )\n                            ) : (\n                                <p>{message.content}</p>\n                            )}\n                            <span className=\"message-time\">\n                                {message.createdAt ? formatTime(message.createdAt) : 'Unknown time'}\n                            </span>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default MessageList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}