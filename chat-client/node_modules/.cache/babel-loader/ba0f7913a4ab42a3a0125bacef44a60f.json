{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UploadedFiles from './UploadedFiles';\nimport { FaPaperclip } from 'react-icons/fa';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:8080'; // Adjust port as needed\n\nconst ChatWindow = () => {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Connect to socket server\n    const newSocket = io(SOCKET_SERVER_URL);\n    setSocket(newSocket);\n\n    // Listen for incoming messages\n    newSocket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Listen for user-joined event\n    newSocket.on('user-joined', username => {\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${username} has joined the chat.`\n      }]);\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server:', newSocket.id); // Log connection success\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error); // Log connection errors\n    });\n\n    // Cleanup on unmount\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const handleFileUpload = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setUploadedFiles(prevFiles => [...prevFiles, file]);\n      // Emit file upload event to server\n      if (socket) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          var _e$target;\n          socket.emit('file-upload', {\n            name: file.name,\n            type: file.type,\n            data: (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result\n          });\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n  const handleSendMessage = message => {\n    if (socket) {\n      socket.emit('message', {\n        text: message,\n        userId: 'user123',\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUserId: \"user123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadedFiles, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"file-upload-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperclip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          onSend: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"thmxGJuzpxcBU++vJl5KTgtMB8A=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","MessageList","MessageInput","UploadedFiles","FaPaperclip","io","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","ChatWindow","_s","uploadedFiles","setUploadedFiles","socket","setSocket","messages","setMessages","newSocket","on","message","prevMessages","username","system","text","console","log","id","error","close","handleFileUpload","event","target","files","file","prevFiles","reader","FileReader","onload","e","_e$target","emit","name","type","data","result","readAsDataURL","handleSendMessage","userId","timestamp","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","htmlFor","style","display","onChange","onSend","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UploadedFiles from './UploadedFiles';\nimport { FaPaperclip, FaUser, FaCamera } from 'react-icons/fa';\nimport io, { Socket } from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:8080'; // Adjust port as needed\n\nconst ChatWindow: React.FC = () => {\n    const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n    const [socket, setSocket] = useState<Socket | null>(null);\n    const [messages, setMessages] = useState<any[]>([]);\n\n    useEffect(() => {\n        // Connect to socket server\n        const newSocket = io(SOCKET_SERVER_URL);\n        setSocket(newSocket);\n\n        // Listen for incoming messages\n        newSocket.on('message', (message) => {\n            setMessages((prevMessages) => [...prevMessages, message]);\n        });\n\n        // Listen for user-joined event\n        newSocket.on('user-joined', (username) => {\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { system: true, text: `${username} has joined the chat.` }\n            ]);\n        });\n\n        newSocket.on('connect', () => {\n            console.log('Connected to server:', newSocket.id); // Log connection success\n        });\n\n        newSocket.on('connect_error', (error) => {\n            console.error('Connection error:', error); // Log connection errors\n        });\n\n        // Cleanup on unmount\n        return () => {\n            newSocket.close();\n        };\n    }, []);\n\n    const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files[0]) {\n            const file = event.target.files[0];\n            setUploadedFiles((prevFiles) => [...prevFiles, file]);\n            // Emit file upload event to server\n            if (socket) {\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    socket.emit('file-upload', {\n                        name: file.name,\n                        type: file.type,\n                        data: e.target?.result\n                    });\n                };\n                reader.readAsDataURL(file);\n            }\n        }\n    };\n\n    const handleSendMessage = (message: string) => {\n        if (socket) {\n            socket.emit('message', {\n                text: message,\n                userId: 'user123',\n                timestamp: new Date().toISOString()\n            });\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <h1>Chat Room</h1>\n            </div>\n            <div className=\"chat-content\">\n                <MessageList messages={messages} currentUserId=\"user123\" />\n                <UploadedFiles files={uploadedFiles} />\n                <div className=\"chat-input-area\">\n                    <label htmlFor=\"file-upload\" className=\"file-upload-icon\">\n                        <FaPaperclip />\n                    </label>\n                    <input\n                        id=\"file-upload\"\n                        type=\"file\"\n                        style={{ display: 'none' }}\n                        onChange={handleFileUpload}\n                    />\n                    <MessageInput onSend={handleSendMessage} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}