{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket'; // Assuming this is the socket service you have set up\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    var _socketService$getSoc;\n    // Initialize WebSocket connection when the component mounts\n    const initializeSocket = async () => {\n      if (userId) {\n        const token = localStorage.getItem('token');\n        if (token) {\n          try {\n            await socketService.initializeSocket(token);\n          } catch (error) {\n            console.error('Error initializing socket:', error);\n          }\n        }\n      }\n    };\n    initializeSocket();\n\n    // Listen for incoming messages\n    (_socketService$getSoc = socketService.getSocket()) === null || _socketService$getSoc === void 0 ? void 0 : _socketService$getSoc.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n  const sendMessage = e => {\n    var _socketService$getSoc2;\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    (_socketService$getSoc2 = socketService.getSocket()) === null || _socketService$getSoc2 === void 0 ? void 0 : _socketService$getSoc2.emit('message', newMessage); // Emit the message to the server\n    setMessages(prevMessages => [...prevMessages, `You: ${newMessage}`]); // Temporarily show the message in UI\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat with User \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.startsWith('You') ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"send-button\",\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"yWwGRMz2nhk7GsFlAbizN9dNuv4=\", false, function () {\n  return [useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","socketService","jsxDEV","_jsxDEV","ChatWindow","_s","userId","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","_socketService$getSoc","initializeSocket","token","localStorage","getItem","error","console","getSocket","on","message","prevMessages","disconnect","sendMessage","e","_socketService$getSoc2","preventDefault","trim","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","startsWith","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket'; // Assuming this is the socket service you have set up\nimport './ChatWindow.css';\n\nconst ChatWindow: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [messages, setMessages] = useState<string[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Initialize WebSocket connection when the component mounts\n    const initializeSocket = async () => {\n      if (userId) {\n        const token = localStorage.getItem('token');\n        if (token) {\n          try {\n            await socketService.initializeSocket(token);\n          } catch (error) {\n            console.error('Error initializing socket:', error);\n          }\n        }\n      }\n    };\n\n    initializeSocket();\n\n    // Listen for incoming messages\n    socketService.getSocket()?.on('message', (message: string) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      // Clean up WebSocket connection on component unmount\n      socketService.disconnect();\n    };\n  }, [userId]);\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) return;\n\n    socketService.getSocket()?.emit('message', newMessage); // Emit the message to the server\n    setMessages((prevMessages) => [...prevMessages, `You: ${newMessage}`]); // Temporarily show the message in UI\n    setNewMessage('');\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <h2>Chat with User {userId}</h2>\n      </div>\n      <div className=\"messages\">\n        {messages.length === 0 ? (\n          <p>No messages yet</p>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={`message ${message.startsWith('You') ? 'sent' : 'received'}`}>\n              <p>{message}</p>\n            </div>\n          ))\n        )}\n      </div>\n\n      <form onSubmit={sendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading} className=\"send-button\">\n          {isLoading ? 'Sending...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}