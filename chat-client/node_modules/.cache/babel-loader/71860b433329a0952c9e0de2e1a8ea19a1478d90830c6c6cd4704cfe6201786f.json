{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useParams,useNavigate}from'react-router-dom';import'./ChatWindow.css';import MessageList from'./MessageList';import MessageInput from'./MessageInput';import UploadedFiles from'./UploadedFiles';import io from'socket.io-client';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const SOCKET_SERVER_URL='http://localhost:8080/chat';const ChatWindow=()=>{const{userId,receiverId}=useParams();const navigate=useNavigate();const[uploadedFiles,setUploadedFiles]=useState([]);const[socket,setSocket]=useState(null);const[messages,setMessages]=useState([]);const[clientId,setClientId]=useState(null);const[connectionStatus,setConnectionStatus]=useState('connecting');// Initialize socket connection\nconst initSocket=useCallback(()=>{const token=localStorage.getItem('token');const storedUserId=localStorage.getItem('userId');if(!token||!storedUserId||storedUserId!==userId){navigate('/login');return null;}// Reuse existing socket if available\nif(window.socket&&window.socket.connected){setSocket(window.socket);setClientId(window.socket.id||null);return window.socket;}const socketOptions={path:'/chat/socket.io',auth:{token:`Bearer ${token}`},query:{userId},transports:['websocket'],reconnectionAttempts:5,reconnectionDelay:1000};const newSocket=io(SOCKET_SERVER_URL,socketOptions);newSocket.on('connect',()=>{console.log('Connected with ID:',newSocket.id);setClientId(newSocket.id||null);setConnectionStatus('connected');if(receiverId){newSocket.emit('join_conversation',{userId,receiverId});}});newSocket.on('disconnect',()=>{setConnectionStatus('disconnected');});newSocket.on('connect_error',err=>{console.error('Connection error:',err);if(err.message.includes('auth')){localStorage.clear();navigate('/login');}});newSocket.on('new_message',message=>{setMessages(prev=>[...prev,message]);});newSocket.on('file-sent',fileMessage=>{setMessages(prev=>[...prev,fileMessage]);});// Store socket globally\nwindow.socket=newSocket;setSocket(newSocket);return newSocket;},[userId,receiverId,navigate]);useEffect(()=>{const newSocket=initSocket();return()=>{// Clean up listeners but keep the connection alive\nnewSocket===null||newSocket===void 0?void 0:newSocket.off('connect');newSocket===null||newSocket===void 0?void 0:newSocket.off('disconnect');newSocket===null||newSocket===void 0?void 0:newSocket.off('connect_error');newSocket===null||newSocket===void 0?void 0:newSocket.off('new_message');newSocket===null||newSocket===void 0?void 0:newSocket.off('file-sent');};},[initSocket]);const handleFileUpload=event=>{var _event$target$files;if((_event$target$files=event.target.files)!==null&&_event$target$files!==void 0&&_event$target$files[0]&&socket){const file=event.target.files[0];setUploadedFiles(prev=>[...prev,file]);const formData=new FormData();formData.append('file',file);formData.append('senderId',userId!==null&&userId!==void 0?userId:'defaultUserId');if(receiverId){formData.append('receiverId',receiverId);}socket.emit('fileUpload',formData,response=>{if(response.status!=='success'){console.error('File upload failed:',response.message);}});}};const handleSendMessage=message=>{if(socket){const messageData=receiverId?{senderId:userId,receiverId,content:message}:{senderId:userId,content:message};socket.emit('send_message',messageData,response=>{if(response.status!=='success'){console.error('Message sending failed:',response.message);}});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Chat Room - User: \",localStorage.getItem('username')]}),clientId&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Connection ID: \",clientId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",connectionStatus]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-content\",children:userId&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MessageList,{messages:messages,currentUserId:userId}),/*#__PURE__*/_jsx(UploadedFiles,{files:uploadedFiles}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-area\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"file-upload-icon\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",style:{display:'none'},onChange:handleFileUpload}),/*#__PURE__*/_jsx(MessageInput,{onSend:handleSendMessage})]})]})})]});};export default ChatWindow;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","MessageList","MessageInput","UploadedFiles","io","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","SOCKET_SERVER_URL","ChatWindow","userId","receiverId","navigate","uploadedFiles","setUploadedFiles","socket","setSocket","messages","setMessages","clientId","setClientId","connectionStatus","setConnectionStatus","initSocket","token","localStorage","getItem","storedUserId","window","connected","id","socketOptions","path","auth","query","transports","reconnectionAttempts","reconnectionDelay","newSocket","on","console","log","emit","err","error","message","includes","clear","prev","fileMessage","off","handleFileUpload","event","_event$target$files","target","files","file","formData","FormData","append","response","status","handleSendMessage","messageData","senderId","content","className","children","currentUserId","htmlFor","type","style","display","onChange","onSend"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UploadedFiles from './UploadedFiles';\nimport { FaPaperclip } from 'react-icons/fa';\nimport io, { Socket, ManagerOptions, SocketOptions } from 'socket.io-client';\n\n\nconst SOCKET_SERVER_URL = 'http://localhost:8080/chat';\n\n\ninterface ChatParams {\n  userId: string;\n  receiverId?: string;\n  [key: string]: string | undefined;\n}\n\nconst ChatWindow: React.FC = () => {\n  const { userId, receiverId } = useParams<ChatParams>();\n  const navigate = useNavigate();\n  const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [messages, setMessages] = useState<any[]>([]);\n  const [clientId, setClientId] = useState<string | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'disconnected'>('connecting');\n\n  // Initialize socket connection\n  const initSocket = useCallback(() => {\n    const token = localStorage.getItem('token');\n    const storedUserId = localStorage.getItem('userId');\n    \n    if (!token || !storedUserId || storedUserId !== userId) {\n      navigate('/login');\n      return null;\n    }\n\n    // Reuse existing socket if available\n    if (window.socket && window.socket.connected) {\n      setSocket(window.socket);\n      setClientId(window.socket.id || null);\n      return window.socket;\n    }\n\n    const socketOptions: Partial<ManagerOptions & SocketOptions> = {\n      path: '/chat/socket.io',\n      auth: { token: `Bearer ${token}` },\n      query: { userId },\n      transports: ['websocket'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    };\n\n    const newSocket = io(SOCKET_SERVER_URL, socketOptions);\n\n    newSocket.on('connect', () => {\n      console.log('Connected with ID:', newSocket.id);\n      setClientId(newSocket.id || null);\n      setConnectionStatus('connected');\n      \n      if (receiverId) {\n        newSocket.emit('join_conversation', { userId, receiverId });\n      }\n    });\n\n    newSocket.on('disconnect', () => {\n      setConnectionStatus('disconnected');\n    });\n\n    newSocket.on('connect_error', (err) => {\n      console.error('Connection error:', err);\n      if (err.message.includes('auth')) {\n        localStorage.clear();\n        navigate('/login');\n      }\n    });\n\n    newSocket.on('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    newSocket.on('file-sent', (fileMessage) => {\n      setMessages(prev => [...prev, fileMessage]);\n    });\n\n    // Store socket globally\n    window.socket = newSocket;\n    setSocket(newSocket);\n\n    return newSocket;\n  }, [userId, receiverId, navigate]);\n\n  useEffect(() => {\n    const newSocket = initSocket();\n\n    return () => {\n      // Clean up listeners but keep the connection alive\n      newSocket?.off('connect');\n      newSocket?.off('disconnect');\n      newSocket?.off('connect_error');\n      newSocket?.off('new_message');\n      newSocket?.off('file-sent');\n    };\n  }, [initSocket]);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files?.[0] && socket) {\n      const file = event.target.files[0];\n      setUploadedFiles(prev => [...prev, file]);\n\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('senderId', userId ?? 'defaultUserId');\n      if (receiverId) {\n        formData.append('receiverId', receiverId);\n      }\n\n      socket.emit('fileUpload', formData, (response: any) => {\n        if (response.status !== 'success') {\n          console.error('File upload failed:', response.message);\n        }\n      });\n    }\n  };\n\n  const handleSendMessage = (message: string) => {\n    if (socket) {\n      const messageData = receiverId \n        ? { senderId: userId, receiverId, content: message }\n        : { senderId: userId, content: message };\n\n      socket.emit('send_message', messageData, (response: any) => {\n        if (response.status !== 'success') {\n          console.error('Message sending failed:', response.message);\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>Chat Room - User: {localStorage.getItem('username')}</h1>\n        {clientId && (\n          <div>\n            <p>Connection ID: {clientId}</p>\n            <p>Status: {connectionStatus}</p>\n          </div>\n        )}\n      </div>\n      <div className=\"chat-content\">\n        {userId && (\n          <>\n            <MessageList messages={messages} currentUserId={userId} />\n            <UploadedFiles files={uploadedFiles} />\n            <div className=\"chat-input-area\">\n              <label htmlFor=\"file-upload\" className=\"file-upload-icon\">\n              </label>\n              <input\n                id=\"file-upload\"\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileUpload}\n              />\n              <MessageInput onSend={handleSendMessage} />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}