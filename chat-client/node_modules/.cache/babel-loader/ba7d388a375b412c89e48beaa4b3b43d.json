{"ast":null,"code":"var _SocketService;\nimport { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  static getInstance() {\n    if (!SocketService.instance) {\n      SocketService.instance = new SocketService();\n    }\n    return SocketService.instance;\n  }\n  initializeSocket(token) {\n    return new Promise((resolve, reject) => {\n      var _this$socket;\n      if ((_this$socket = this.socket) !== null && _this$socket !== void 0 && _this$socket.connected) {\n        resolve(this.socket);\n        return;\n      }\n      this.socket = io('http://localhost:8080/chat', {\n        path: '/socket.io',\n        auth: {\n          token: `Bearer ${token}`\n        },\n        transports: ['websocket'],\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        withCredentials: true\n      });\n      this.socket.on('connect', () => {\n        var _this$socket2;\n        console.log('Socket connected with ID:', (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.id);\n        resolve(this.socket);\n      });\n      this.socket.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n        reject(error);\n      });\n      this.socket.on('disconnect', reason => {\n        console.log('Socket disconnected:', reason);\n      });\n    });\n  }\n  getSocket() {\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n}\n_SocketService = SocketService;\nSocketService.instance = void 0;\nexport const socketService = SocketService.getInstance();\nexport const sendMessage = message => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc;\n    (_socketService$getSoc = socketService.getSocket()) === null || _socketService$getSoc === void 0 ? void 0 : _socketService$getSoc.emit('message', message);\n  } else {\n    console.error('Socket is not connected');\n  }\n};\nexport const onMessageReceived = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc2;\n    (_socketService$getSoc2 = socketService.getSocket()) === null || _socketService$getSoc2 === void 0 ? void 0 : _socketService$getSoc2.on('message', callback);\n  }\n};\nexport const uploadFile = fileData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc3;\n    (_socketService$getSoc3 = socketService.getSocket()) === null || _socketService$getSoc3 === void 0 ? void 0 : _socketService$getSoc3.emit('fileUpload', fileData);\n  }\n};\nexport const onFileUploaded = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc4;\n    (_socketService$getSoc4 = socketService.getSocket()) === null || _socketService$getSoc4 === void 0 ? void 0 : _socketService$getSoc4.on('fileUploaded', callback);\n  }\n};\nexport const joinRoom = roomId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc5;\n    (_socketService$getSoc5 = socketService.getSocket()) === null || _socketService$getSoc5 === void 0 ? void 0 : _socketService$getSoc5.emit('joinRoom', {\n      roomId\n    });\n  }\n};\nexport const leaveRoom = roomId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc6;\n    (_socketService$getSoc6 = socketService.getSocket()) === null || _socketService$getSoc6 === void 0 ? void 0 : _socketService$getSoc6.emit('leaveRoom', {\n      roomId\n    });\n  }\n};\nexport const onUserJoined = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc7;\n    (_socketService$getSoc7 = socketService.getSocket()) === null || _socketService$getSoc7 === void 0 ? void 0 : _socketService$getSoc7.on('user-joined', callback);\n  }\n};\nexport const onUserLeft = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc8;\n    (_socketService$getSoc8 = socketService.getSocket()) === null || _socketService$getSoc8 === void 0 ? void 0 : _socketService$getSoc8.on('user-left', callback);\n  }\n};\nexport const acknowledgeMessage = messageId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc9;\n    (_socketService$getSoc9 = socketService.getSocket()) === null || _socketService$getSoc9 === void 0 ? void 0 : _socketService$getSoc9.emit('acknowledge', {\n      messageId\n    });\n  }\n};\nexport const onAcknowledged = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc10;\n    (_socketService$getSoc10 = socketService.getSocket()) === null || _socketService$getSoc10 === void 0 ? void 0 : _socketService$getSoc10.on('acknowledged', callback);\n  }\n};\nexport const sendTyping = typingData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc11;\n    (_socketService$getSoc11 = socketService.getSocket()) === null || _socketService$getSoc11 === void 0 ? void 0 : _socketService$getSoc11.emit('typing', typingData);\n  }\n};\nexport const stopTyping = typingData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc12;\n    (_socketService$getSoc12 = socketService.getSocket()) === null || _socketService$getSoc12 === void 0 ? void 0 : _socketService$getSoc12.emit('stop_typing', typingData);\n  }\n};\nexport const onTyping = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc13;\n    (_socketService$getSoc13 = socketService.getSocket()) === null || _socketService$getSoc13 === void 0 ? void 0 : _socketService$getSoc13.on('typing', callback);\n  }\n};\nexport const onStopTyping = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc14;\n    (_socketService$getSoc14 = socketService.getSocket()) === null || _socketService$getSoc14 === void 0 ? void 0 : _socketService$getSoc14.on('stop_typing', callback);\n  }\n};\nexport const sendReadReceipt = readReceiptData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc15;\n    (_socketService$getSoc15 = socketService.getSocket()) === null || _socketService$getSoc15 === void 0 ? void 0 : _socketService$getSoc15.emit('read_receipt', readReceiptData);\n  }\n};\nexport const onMessageRead = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc16;\n    (_socketService$getSoc16 = socketService.getSocket()) === null || _socketService$getSoc16 === void 0 ? void 0 : _socketService$getSoc16.on('message_read', callback);\n  }\n};","map":{"version":3,"names":["io","SocketService","constructor","socket","getInstance","instance","initializeSocket","token","Promise","resolve","reject","_this$socket","connected","path","auth","transports","reconnectionAttempts","reconnectionDelay","withCredentials","on","_this$socket2","console","log","id","error","reason","getSocket","disconnect","_SocketService","socketService","sendMessage","message","_socketService$getSoc","emit","onMessageReceived","callback","_socketService$getSoc2","uploadFile","fileData","_socketService$getSoc3","onFileUploaded","_socketService$getSoc4","joinRoom","roomId","_socketService$getSoc5","leaveRoom","_socketService$getSoc6","onUserJoined","_socketService$getSoc7","onUserLeft","_socketService$getSoc8","acknowledgeMessage","messageId","_socketService$getSoc9","onAcknowledged","_socketService$getSoc10","sendTyping","typingData","_socketService$getSoc11","stopTyping","_socketService$getSoc12","onTyping","_socketService$getSoc13","onStopTyping","_socketService$getSoc14","sendReadReceipt","readReceiptData","_socketService$getSoc15","onMessageRead","_socketService$getSoc16"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/services/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\n\nclass SocketService {\n    private static instance: SocketService;\n    private socket: Socket | null = null;\n\n    private constructor() {}\n\n    static getInstance(): SocketService {\n        if (!SocketService.instance) {\n            SocketService.instance = new SocketService();\n        }\n        return SocketService.instance;\n    }\n\n    initializeSocket(token: string): Promise<Socket> {\n        return new Promise((resolve, reject) => {\n            if (this.socket?.connected) {\n                resolve(this.socket);\n                return;\n            }\n\n            this.socket = io('http://localhost:8080/chat', {\n                path: '/socket.io',\n                auth: {\n                    token: `Bearer ${token}`\n                },\n                transports: ['websocket'],\n                reconnectionAttempts: 5,\n                reconnectionDelay: 1000,\n                withCredentials: true\n            });\n\n            this.socket.on('connect', () => {\n                console.log('Socket connected with ID:', this.socket?.id);\n                resolve(this.socket!);\n            });\n\n            this.socket.on('connect_error', (error) => {\n                console.error('Socket connection error:', error);\n                reject(error);\n            });\n\n            this.socket.on('disconnect', (reason) => {\n                console.log('Socket disconnected:', reason);\n            });\n        });\n    }\n\n    getSocket(): Socket | null {\n        return this.socket;\n    }\n\n    disconnect(): void {\n        if (this.socket) {\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    }\n}\n\nexport const socketService = SocketService.getInstance();\n\nexport const sendMessage = (message: { text: string; userId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('message', message);\n    } else {\n        console.error('Socket is not connected');\n    }\n};\n\nexport const onMessageReceived = (callback: (message: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('message', callback);\n    }\n};\n\nexport const uploadFile = (fileData: any) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('fileUpload', fileData);\n    }\n};\n\nexport const onFileUploaded = (callback: (response: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('fileUploaded', callback);\n    }\n};\n\nexport const joinRoom = (roomId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('joinRoom', { roomId });\n    }\n};\n\nexport const leaveRoom = (roomId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('leaveRoom', { roomId });\n    }\n};\n\nexport const onUserJoined = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('user-joined', callback);\n    }\n};\n\nexport const onUserLeft = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('user-left', callback);\n    }\n};\n\nexport const acknowledgeMessage = (messageId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('acknowledge', { messageId });\n    }\n};\n\nexport const onAcknowledged = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('acknowledged', callback);\n    }\n};\n\nexport const sendTyping = (typingData: { senderId: string; receiverId: string; chatId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('typing', typingData);\n    }\n};\n\nexport const stopTyping = (typingData: { senderId: string; receiverId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('stop_typing', typingData);\n    }\n};\n\nexport const onTyping = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('typing', callback);\n    }\n};\n\nexport const onStopTyping = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('stop_typing', callback);\n    }\n};\n\nexport const sendReadReceipt = (readReceiptData: { messageId: string; receiverId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('read_receipt', readReceiptData);\n    }\n};\n\nexport const onMessageRead = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('message_read', callback);\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}