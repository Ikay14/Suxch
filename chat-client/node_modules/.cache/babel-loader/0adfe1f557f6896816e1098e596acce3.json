{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UploadedFiles from './UploadedFiles';\nimport { FaPaperclip } from 'react-icons/fa';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:8080/chat';\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId,\n    receiverId\n  } = useParams();\n  const history = useHistory();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [clientId, setClientId] = useState(null);\n\n  // Verify authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUserId = localStorage.getItem('userId');\n    if (!token || !storedUserId || storedUserId !== userId) {\n      history.replace('/login');\n      return;\n    }\n    const newSocket = io(SOCKET_SERVER_URL, {\n      path: '/chat/socket.io',\n      query: {\n        userId\n      },\n      auth: {\n        token: `Bearer ${token}`\n      },\n      transports: ['websocket', 'polling'],\n      withCredentials: true\n    });\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('Connected with ID:', newSocket.id);\n      setClientId(newSocket.id);\n      if (receiverId) {\n        newSocket.emit('join_conversation', {\n          userId,\n          receiverId\n        });\n      }\n    });\n    newSocket.on('new_message', message => {\n      console.log('New message:', message);\n      setMessages(prev => [...prev, message]);\n    });\n    newSocket.on('file-sent', fileMessage => {\n      setMessages(prev => [...prev, fileMessage]);\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Connection error:', err);\n      if (err.message.includes('auth')) {\n        localStorage.clear();\n        history.push('/login');\n      }\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [userId, receiverId, history]);\n  const handleFileUpload = event => {\n    if (event.target.files && event.target.files[0] && socket) {\n      const file = event.target.files[0];\n      setUploadedFiles(prevFiles => [...prevFiles, file]);\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('senderId', userId);\n      if (receiverId) {\n        formData.append('receiverId', receiverId);\n      }\n      socket.emit('fileUpload', formData, response => {\n        if (response.status === 'success') {\n          console.log('File uploaded successfully:', response.data);\n        } else {\n          console.error('File upload failed:', response.message);\n        }\n      });\n    }\n  };\n  const handleSendMessage = message => {\n    if (socket) {\n      const messageData = receiverId ? {\n        senderId: userId,\n        receiverId,\n        content: message\n      } : {\n        senderId: userId,\n        content: message\n      }; // For group chats\n\n      socket.emit('send_message', messageData, response => {\n        if (response.status === 'success') {\n          console.log('Message sent successfully:', response.data);\n        } else {\n          console.error('Message sending failed:', response.message);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Chat Room - User: \", localStorage.getItem('username')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), clientId && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connection ID: \", clientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUserId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadedFiles, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"file-upload-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperclip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          type: \"file\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          onSend: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"woX+LMSpS/Pv791B/tSMPtfRnv8=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","MessageList","MessageInput","UploadedFiles","FaPaperclip","io","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","ChatWindow","_s","userId","receiverId","history","uploadedFiles","setUploadedFiles","socket","setSocket","messages","setMessages","clientId","setClientId","token","localStorage","getItem","storedUserId","replace","newSocket","path","query","auth","transports","withCredentials","on","console","log","id","emit","message","prev","fileMessage","err","error","includes","clear","push","disconnect","handleFileUpload","event","target","files","file","prevFiles","formData","FormData","append","response","status","data","handleSendMessage","messageData","senderId","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentUserId","htmlFor","type","style","display","onChange","onSend","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './ChatWindow.css';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport UploadedFiles from './UploadedFiles';\nimport { FaPaperclip } from 'react-icons/fa';\nimport io, { Socket } from 'socket.io-client';\nimport { stopTyping } from 'src/services/socket';\n\nconst SOCKET_SERVER_URL = 'http://localhost:8080/chat';\n\ninterface ChatParams {\n    userId: string;\n    receiverId?: string; \n}\n\nconst ChatWindow: React.FC = () => {\n    const { userId, receiverId } = useParams<ChatParams>();\n    const history = useHistory();\n    const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n    const [socket, setSocket] = useState<Socket | null>(null);\n    const [messages, setMessages] = useState<any[]>([]);\n    const [clientId, setClientId] = useState<string | null>(null);\n\n    // Verify authentication on component mount\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const storedUserId = localStorage.getItem('userId');\n        \n        if (!token || !storedUserId || storedUserId !== userId) {\n          history.replace('/login');\n          return;\n        }\n      \n        const newSocket = io(SOCKET_SERVER_URL, {\n          path: '/chat/socket.io',\n          query: { userId },\n          auth: { token: `Bearer ${token}` },\n          transports: ['websocket', 'polling'],\n          withCredentials: true\n        });\n      \n        setSocket(newSocket);\n      \n        newSocket.on('connect', () => {\n          console.log('Connected with ID:', newSocket.id);\n          setClientId(newSocket.id);\n          \n          if (receiverId) {\n            newSocket.emit('join_conversation', { userId, receiverId });\n          }\n        });\n      \n        newSocket.on('new_message', (message) => {\n          console.log('New message:', message);\n          setMessages(prev => [...prev, message]);\n        });\n      \n        newSocket.on('file-sent', (fileMessage) => {\n          setMessages(prev => [...prev, fileMessage]);\n        });\n      \n        newSocket.on('connect_error', (err) => {\n          console.error('Connection error:', err);\n          if (err.message.includes('auth')) {\n            localStorage.clear();\n            history.push('/login');\n          }\n        });\n      \n        return () => {\n          newSocket.disconnect();\n        };\n      }, [userId, receiverId, history]);\n\n    const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files[0] && socket) {\n            const file = event.target.files[0];\n            setUploadedFiles((prevFiles) => [...prevFiles, file]);\n\n            const formData = new FormData();\n            formData.append('file', file);\n            formData.append('senderId', userId);\n            if (receiverId) {\n                formData.append('receiverId', receiverId);\n            }\n\n            socket.emit('fileUpload', formData, (response: any) => {\n                if (response.status === 'success') {\n                    console.log('File uploaded successfully:', response.data);\n                } else {\n                    console.error('File upload failed:', response.message);\n                }\n            });\n        }\n    };\n\n    const handleSendMessage = (message: string) => {\n        if (socket) {\n            const messageData = receiverId \n                ? { senderId: userId, receiverId, content: message }\n                : { senderId: userId, content: message }; // For group chats\n\n            socket.emit('send_message', messageData, (response: any) => {\n                if (response.status === 'success') {\n                    console.log('Message sent successfully:', response.data);\n                } else {\n                    console.error('Message sending failed:', response.message);\n                }\n            });\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <h1>Chat Room - User: {localStorage.getItem('username')}</h1>\n                {clientId && <p>Connection ID: {clientId}</p>}\n            </div>\n            <div className=\"chat-content\">\n                <MessageList messages={messages} currentUserId={userId} />\n                <UploadedFiles files={uploadedFiles} />\n                <div className=\"chat-input-area\">\n                    <label htmlFor=\"file-upload\" className=\"file-upload-icon\">\n                        <FaPaperclip />\n                    </label>\n                    <input\n                        id=\"file-upload\"\n                        type=\"file\"\n                        style={{ display: 'none' }}\n                        onChange={handleFileUpload}\n                    />\n                    <MessageInput onSend={handleSendMessage} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}