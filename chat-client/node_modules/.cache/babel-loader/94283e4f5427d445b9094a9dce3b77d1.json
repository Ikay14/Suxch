{"ast":null,"code":"var _SocketService;\nimport { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    if (SocketService.instance) {\n      return SocketService.instance;\n    }\n    SocketService.instance = this;\n  }\n  static getInstance() {\n    if (!SocketService.instance) {\n      SocketService.instance = new SocketService();\n    }\n    return SocketService.instance;\n  }\n  initializeSocket(token) {\n    return new Promise((resolve, reject) => {\n      var _this$socket;\n      if ((_this$socket = this.socket) !== null && _this$socket !== void 0 && _this$socket.connected) {\n        resolve(this.socket);\n        return;\n      }\n\n      // Create socket connection with correct configuration\n      this.socket = io('http://localhost:8080/chat', {\n        auth: {\n          token: token // Send raw token without Bearer prefix\n        },\n        transports: ['websocket'],\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        withCredentials: true,\n        forceNew: true,\n        timeout: 10000,\n        query: {\n          userId: localStorage.getItem('userId'),\n          username: localStorage.getItem('username')\n        }\n      });\n      this.socket.on('connect', () => {\n        if (this.socket) {\n          console.log('Socket connected with ID:', this.socket.id);\n          resolve(this.socket);\n        }\n      });\n      this.socket.on('connect_error', error => {\n        var _this$socket2, _this$socket3;\n        console.error('Socket connection error details:', {\n          message: error.message,\n          data: error.data,\n          type: error.type,\n          description: error.description,\n          stack: error.stack,\n          auth: (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.auth,\n          query: (_this$socket3 = this.socket) === null || _this$socket3 === void 0 ? void 0 : _this$socket3.query\n        });\n        reject(new Error('Authentication failed: ' + error.message));\n      });\n      this.socket.on('disconnect', reason => {\n        console.log('Socket disconnected:', reason);\n        // Attempt to reconnect if disconnected\n        if (reason === 'io server disconnect' || reason === 'transport close') {\n          var _this$socket4;\n          (_this$socket4 = this.socket) === null || _this$socket4 === void 0 ? void 0 : _this$socket4.connect();\n        }\n      });\n      this.socket.on('error', error => {\n        var _this$socket5, _this$socket6;\n        console.error('Socket error:', {\n          error,\n          auth: (_this$socket5 = this.socket) === null || _this$socket5 === void 0 ? void 0 : _this$socket5.auth,\n          query: (_this$socket6 = this.socket) === null || _this$socket6 === void 0 ? void 0 : _this$socket6.query\n        });\n        reject(error);\n      });\n\n      // Add timeout handler\n      setTimeout(() => {\n        var _this$socket7;\n        if (!((_this$socket7 = this.socket) !== null && _this$socket7 !== void 0 && _this$socket7.connected)) {\n          var _this$socket8;\n          console.error('Connection timeout');\n          (_this$socket8 = this.socket) === null || _this$socket8 === void 0 ? void 0 : _this$socket8.close();\n          reject(new Error('Connection timeout'));\n        }\n      }, 10000);\n    });\n  }\n  getSocket() {\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n}\n\n// Create and export a singleton instance\n_SocketService = SocketService;\nSocketService.instance = null;\nexport const socketService = new SocketService();\nexport const sendMessage = message => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc;\n    (_socketService$getSoc = socketService.getSocket()) === null || _socketService$getSoc === void 0 ? void 0 : _socketService$getSoc.emit('message', message);\n  } else {\n    console.error('Socket is not connected');\n  }\n};\nexport const onMessageReceived = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc2;\n    (_socketService$getSoc2 = socketService.getSocket()) === null || _socketService$getSoc2 === void 0 ? void 0 : _socketService$getSoc2.on('message', callback);\n  }\n};\nexport const uploadFile = fileData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc3;\n    (_socketService$getSoc3 = socketService.getSocket()) === null || _socketService$getSoc3 === void 0 ? void 0 : _socketService$getSoc3.emit('fileUpload', fileData);\n  }\n};\nexport const onFileUploaded = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc4;\n    (_socketService$getSoc4 = socketService.getSocket()) === null || _socketService$getSoc4 === void 0 ? void 0 : _socketService$getSoc4.on('fileUploaded', callback);\n  }\n};\nexport const joinRoom = roomId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc5;\n    (_socketService$getSoc5 = socketService.getSocket()) === null || _socketService$getSoc5 === void 0 ? void 0 : _socketService$getSoc5.emit('joinRoom', {\n      roomId\n    });\n  }\n};\nexport const leaveRoom = roomId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc6;\n    (_socketService$getSoc6 = socketService.getSocket()) === null || _socketService$getSoc6 === void 0 ? void 0 : _socketService$getSoc6.emit('leaveRoom', {\n      roomId\n    });\n  }\n};\nexport const onUserJoined = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc7;\n    (_socketService$getSoc7 = socketService.getSocket()) === null || _socketService$getSoc7 === void 0 ? void 0 : _socketService$getSoc7.on('user-joined', callback);\n  }\n};\nexport const onUserLeft = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc8;\n    (_socketService$getSoc8 = socketService.getSocket()) === null || _socketService$getSoc8 === void 0 ? void 0 : _socketService$getSoc8.on('user-left', callback);\n  }\n};\nexport const acknowledgeMessage = messageId => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc9;\n    (_socketService$getSoc9 = socketService.getSocket()) === null || _socketService$getSoc9 === void 0 ? void 0 : _socketService$getSoc9.emit('acknowledge', {\n      messageId\n    });\n  }\n};\nexport const onAcknowledged = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc10;\n    (_socketService$getSoc10 = socketService.getSocket()) === null || _socketService$getSoc10 === void 0 ? void 0 : _socketService$getSoc10.on('acknowledged', callback);\n  }\n};\nexport const sendTyping = typingData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc11;\n    (_socketService$getSoc11 = socketService.getSocket()) === null || _socketService$getSoc11 === void 0 ? void 0 : _socketService$getSoc11.emit('typing', typingData);\n  }\n};\nexport const stopTyping = typingData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc12;\n    (_socketService$getSoc12 = socketService.getSocket()) === null || _socketService$getSoc12 === void 0 ? void 0 : _socketService$getSoc12.emit('stop_typing', typingData);\n  }\n};\nexport const onTyping = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc13;\n    (_socketService$getSoc13 = socketService.getSocket()) === null || _socketService$getSoc13 === void 0 ? void 0 : _socketService$getSoc13.on('typing', callback);\n  }\n};\nexport const onStopTyping = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc14;\n    (_socketService$getSoc14 = socketService.getSocket()) === null || _socketService$getSoc14 === void 0 ? void 0 : _socketService$getSoc14.on('stop_typing', callback);\n  }\n};\nexport const sendReadReceipt = readReceiptData => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc15;\n    (_socketService$getSoc15 = socketService.getSocket()) === null || _socketService$getSoc15 === void 0 ? void 0 : _socketService$getSoc15.emit('read_receipt', readReceiptData);\n  }\n};\nexport const onMessageRead = callback => {\n  if (socketService.getSocket()) {\n    var _socketService$getSoc16;\n    (_socketService$getSoc16 = socketService.getSocket()) === null || _socketService$getSoc16 === void 0 ? void 0 : _socketService$getSoc16.on('message_read', callback);\n  }\n};","map":{"version":3,"names":["io","SocketService","constructor","socket","instance","getInstance","initializeSocket","token","Promise","resolve","reject","_this$socket","connected","auth","transports","reconnectionAttempts","reconnectionDelay","withCredentials","forceNew","timeout","query","userId","localStorage","getItem","username","on","console","log","id","error","_this$socket2","_this$socket3","message","data","type","description","stack","Error","reason","_this$socket4","connect","_this$socket5","_this$socket6","setTimeout","_this$socket7","_this$socket8","close","getSocket","disconnect","_SocketService","socketService","sendMessage","_socketService$getSoc","emit","onMessageReceived","callback","_socketService$getSoc2","uploadFile","fileData","_socketService$getSoc3","onFileUploaded","_socketService$getSoc4","joinRoom","roomId","_socketService$getSoc5","leaveRoom","_socketService$getSoc6","onUserJoined","_socketService$getSoc7","onUserLeft","_socketService$getSoc8","acknowledgeMessage","messageId","_socketService$getSoc9","onAcknowledged","_socketService$getSoc10","sendTyping","typingData","_socketService$getSoc11","stopTyping","_socketService$getSoc12","onTyping","_socketService$getSoc13","onStopTyping","_socketService$getSoc14","sendReadReceipt","readReceiptData","_socketService$getSoc15","onMessageRead","_socketService$getSoc16"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/services/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\n\nclass SocketService {\n    static instance: SocketService | null = null;\n    socket: Socket | null = null;\n\n    constructor() {\n        if (SocketService.instance) {\n            return SocketService.instance;\n        }\n        SocketService.instance = this;\n    }\n\n    static getInstance(): SocketService {\n        if (!SocketService.instance) {\n            SocketService.instance = new SocketService();\n        }\n        return SocketService.instance;\n    }\n\n    initializeSocket(token: string): Promise<Socket> {\n        return new Promise((resolve, reject) => {\n            if (this.socket?.connected) {\n                resolve(this.socket);\n                return;\n            }\n\n            // Create socket connection with correct configuration\n            this.socket = io('http://localhost:8080/chat', {\n                auth: {\n                    token: token  // Send raw token without Bearer prefix\n                },\n                transports: ['websocket'],\n                reconnectionAttempts: 5,\n                reconnectionDelay: 1000,\n                withCredentials: true,\n                forceNew: true,\n                timeout: 10000,\n                query: {\n                    userId: localStorage.getItem('userId'),\n                    username: localStorage.getItem('username')\n                }\n            });\n\n            this.socket.on('connect', () => {\n                if (this.socket) {\n                    console.log('Socket connected with ID:', this.socket.id);\n                    resolve(this.socket);\n                }\n            });\n\n            this.socket.on('connect_error', (error: any) => {\n                console.error('Socket connection error details:', {\n                    message: error.message,\n                    data: error.data,\n                    type: error.type,\n                    description: error.description,\n                    stack: error.stack,\n                    auth: this.socket?.auth,\n                    query: this.socket?.query\n                });\n                reject(new Error('Authentication failed: ' + error.message));\n            });\n\n            this.socket.on('disconnect', (reason) => {\n                console.log('Socket disconnected:', reason);\n                // Attempt to reconnect if disconnected\n                if (reason === 'io server disconnect' || reason === 'transport close') {\n                    this.socket?.connect();\n                }\n            });\n\n            this.socket.on('error', (error: any) => {\n                console.error('Socket error:', {\n                    error,\n                    auth: this.socket?.auth,\n                    query: this.socket?.query\n                });\n                reject(error);\n            });\n\n            // Add timeout handler\n            setTimeout(() => {\n                if (!this.socket?.connected) {\n                    console.error('Connection timeout');\n                    this.socket?.close();\n                    reject(new Error('Connection timeout'));\n                }\n            }, 10000);\n        });\n    }\n\n    getSocket(): Socket | null {\n        return this.socket;\n    }\n\n    disconnect(): void {\n        if (this.socket) {\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    }\n}\n\n// Create and export a singleton instance\nexport const socketService = new SocketService();\n\nexport const sendMessage = (message: { text: string; userId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('message', message);\n    } else {\n        console.error('Socket is not connected');\n    }\n};\n\nexport const onMessageReceived = (callback: (message: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('message', callback);\n    }\n};\n\nexport const uploadFile = (fileData: any) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('fileUpload', fileData);\n    }\n};\n\nexport const onFileUploaded = (callback: (response: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('fileUploaded', callback);\n    }\n};\n\nexport const joinRoom = (roomId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('joinRoom', { roomId });\n    }\n};\n\nexport const leaveRoom = (roomId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('leaveRoom', { roomId });\n    }\n};\n\nexport const onUserJoined = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('user-joined', callback);\n    }\n};\n\nexport const onUserLeft = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('user-left', callback);\n    }\n};\n\nexport const acknowledgeMessage = (messageId: string) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('acknowledge', { messageId });\n    }\n};\n\nexport const onAcknowledged = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('acknowledged', callback);\n    }\n};\n\nexport const sendTyping = (typingData: { senderId: string; receiverId: string; chatId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('typing', typingData);\n    }\n};\n\nexport const stopTyping = (typingData: { senderId: string; receiverId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('stop_typing', typingData);\n    }\n};\n\nexport const onTyping = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('typing', callback);\n    }\n};\n\nexport const onStopTyping = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('stop_typing', callback);\n    }\n};\n\nexport const sendReadReceipt = (readReceiptData: { messageId: string; receiverId: string }) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.emit('read_receipt', readReceiptData);\n    }\n};\n\nexport const onMessageRead = (callback: (data: any) => void) => {\n    if (socketService.getSocket()) {\n        socketService.getSocket()?.on('message_read', callback);\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}