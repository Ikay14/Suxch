{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\projects\\\\suxch\\\\chat-client\\\\src\\\\components\\\\Chat\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    receiverId,\n    senderId\n  } = useParams();\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n    initializeSocket();\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      const token = localStorage.getItem('token');\n      if (token && senderId && receiverId) {\n        socketService.initializeSocket(token, senderId);\n      }\n    }\n    return () => {\n      socketService.disconnect();\n    };\n  }, [senderId, receiverId]);\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', message => {\n        var _message$data;\n        const senderFullName = (message === null || message === void 0 ? void 0 : (_message$data = message.data) === null || _message$data === void 0 ? void 0 : _message$data.fullName) || 'Unknown';\n        setMessages(prevMessages => [...prevMessages, {\n          content: message.content,\n          fullName: senderFullName,\n          createdAt: new Date().toISOString()\n        }]);\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off('new_message');\n      }\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n    if (!receiverId || !senderId) {\n      return;\n    }\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage\n    };\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n    socket.emit('send_message', payload, response => {\n      if (response.status === 'success') {\n        setMessages(prevMessages => [...prevMessages, {\n          content: newMessage,\n          fullName: 'You',\n          createdAt: new Date().toISOString()\n        }]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/40\" // Replace with the user's avatar URL\n          ,\n          alt: \"User Avatar\",\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: receiverId ? `User ${receiverId}` : 'Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-status\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.fullName === 'You' ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: new Date(message.createdAt).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"\\u25BA \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"0heI3HKuctyNk+YEYnJE+TPFlgk=\", false, function () {\n  return [useParams, useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useParams","socketService","jsxDEV","_jsxDEV","ChatWindow","_s","userId","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","receiverId","senderId","initializeSocket","token","localStorage","getItem","console","log","error","socket","getSocket","off","disconnect","connected","on","message","_message$data","senderFullName","data","fullName","prevMessages","content","createdAt","Date","toISOString","sendMessage","e","preventDefault","trim","payload","emit","response","status","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","index","toLocaleTimeString","hour","minute","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/projects/suxch/chat-client/src/components/Chat/ChatWindow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { socketService } from '../../services/socket';  \nimport './ChatWindow.css';\nimport MessageList from './MessageList';\n\nconst ChatWindow: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  interface Message {\n    content: string;\n    fullName: string;\n    createdAt: string;\n  }\n  \n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { receiverId, senderId } = useParams<{ receiverId: string; senderId: string }>();\n\n  useEffect(() => {\n    const initializeSocket = async () => {\n      const token = localStorage.getItem('token');\n      if (token && senderId) {\n        try {\n          await socketService.initializeSocket(token, senderId);\n          console.log('WebSocket initialized successfully');\n        } catch (error) {\n          console.error('Error initializing WebSocket:', error);\n        }\n      } else {\n        console.error('Token or senderId is missing');\n      }\n    };\n\n    initializeSocket();\n\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      const socket = socketService.getSocket();\n      if (socket) {\n        socket.off('message');\n      }\n      socketService.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      const token = localStorage.getItem('token');\n      if (token && senderId && receiverId) {\n        socketService.initializeSocket(token, senderId);\n      }\n    }\n\n    return () => {\n      socketService.disconnect();\n    };\n  }, [senderId, receiverId]);\n\n  useEffect(() => {\n    const socket = socketService.getSocket();\n    if (socket) {\n      socket.on('new_message', (message: any) => {\n\n        const senderFullName = message?.data?.fullName || 'Unknown';\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            content: message.content,\n            fullName: senderFullName,\n            createdAt: new Date().toISOString(),\n          },\n        ]);\n      });\n    }\n\n    return () => {\n      if (socket) {\n        socket.off('new_message');\n      }\n    };\n  }, []);\n\n  const sendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!newMessage.trim()) {\n      console.error('Message content is empty');\n      return;\n    }\n\n    if (!receiverId || !senderId) {\n      return;\n    }\n\n    const payload = {\n      receiverId,\n      senderId,\n      content: newMessage,\n    };\n\n\n    const socket = socketService.getSocket();\n    if (!socket || !socket.connected) {\n      console.error('WebSocket is not connected');\n      return;\n    }\n\n    socket.emit('send_message', payload, (response: any) => {\n      if (response.status === 'success') {\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      {\n        content: newMessage,\n        fullName: 'You',\n        createdAt: new Date().toISOString(),\n      },\n    ]);\n      } else {\n        console.error('Failed to send message:', response.message);\n      }\n    });\n\n    setNewMessage('');\n  };\n  \n  return (\n    <div className=\"chat-window\">\n      {/* Chat Header */}\n      <div className=\"chat-header\">\n        <button className=\"back-button\" onClick={() => window.history.back()}>\n          &#8592;\n        </button>\n        <div className=\"chat-header-info\">\n          <img\n            src=\"https://via.placeholder.com/40\" // Replace with the user's avatar URL\n            alt=\"User Avatar\"\n            className=\"user-avatar\"\n          />\n          <div>\n            <h2>{receiverId ? `User ${receiverId}` : 'Chat'}</h2>\n            <span className=\"chat-status\">Online</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.fullName === 'You' ? 'sent' : 'received'}`}\n          >\n            <p className=\"message-content\">{message.content}</p>\n            <span className=\"timestamp\">\n              {new Date(message.createdAt).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit',\n              })}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      {/* Input Area */}\n      <form onSubmit={sendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          &#9658; {/* Send Icon */}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}