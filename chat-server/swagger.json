{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_registerUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/request_password": {
      "post": {
        "operationId": "AuthController_requestPasswordChange",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/changepassword": {
      "post": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/verify": {
      "patch": {
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/user": {
      "post": {
        "operationId": "UserController_upsetUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/upload/{userId}": {
      "post": {
        "operationId": "UserController_uploadFile",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/profile/{userId}": {
      "delete": {
        "operationId": "UserController_deleteProfile",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/{userId}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/by-any/{key}/{value}": {
      "get": {
        "operationId": "UserController_getUserByAnyKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/user/query/all": {
      "get": {
        "operationId": "UserController_queyAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/group/{userId}": {
      "post": {
        "operationId": "GroupController_createGroup",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDTo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new group",
        "tags": [
          "Groups"
        ]
      },
      "patch": {
        "operationId": "GroupController_updateGroupDetails",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user making the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully"
          },
          "403": {
            "description": "Forbidden (not admin)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update group details",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group": {
      "delete": {
        "operationId": "GroupController_deleteGroup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "example": "abc123"
                  },
                  "userId": {
                    "type": "string",
                    "example": "user456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group deleted"
          },
          "404": {
            "description": "Group not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/add-member": {
      "post": {
        "operationId": "GroupController_addMember",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "example": "abc123",
                    "description": "ID of the group"
                  },
                  "userId": {
                    "type": "string",
                    "example": "user456",
                    "description": "ID of the user to be added"
                  },
                  "adminId": {
                    "type": "string",
                    "example": "admin789",
                    "description": "ID of the admin performing the action"
                  }
                },
                "required": [
                  "groupId",
                  "userId",
                  "adminId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member added successfully"
          },
          "403": {
            "description": "Unauthorized action"
          },
          "404": {
            "description": "Group or user not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Add a member to a group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/remove-member": {
      "patch": {
        "operationId": "GroupController_removeMember",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "example": "abc123",
                    "description": "ID of the group"
                  },
                  "userId": {
                    "type": "string",
                    "example": "user456",
                    "description": "ID of the user to be removed"
                  },
                  "adminId": {
                    "type": "string",
                    "example": "admin789",
                    "description": "ID of the admin performing the action"
                  }
                },
                "required": [
                  "groupId",
                  "userId",
                  "adminId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member removed successfully"
          },
          "403": {
            "description": "Unauthorized action"
          },
          "404": {
            "description": "Group or user not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remove a member from a group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/{groupId}": {
      "get": {
        "operationId": "GroupController_getGroupById",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "description": "ID of the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group details"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get group by ID",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/all": {
      "get": {
        "operationId": "GroupController_getAllGroups",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of groups"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all groups (paginated)",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/by-any/{key}/{value}": {
      "get": {
        "operationId": "GroupController_getGroupByAnyKey",
        "parameters": [
          {
            "name": "value",
            "required": true,
            "in": "path",
            "description": "Field value to match",
            "schema": {}
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "description": "Field name (e.g., \"name\")",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered groups"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get groups by any field",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/make-admin": {
      "post": {
        "operationId": "GroupController_makeAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "example": "abc123"
                  },
                  "userId": {
                    "type": "string",
                    "example": "user456"
                  },
                  "adminId": {
                    "type": "string",
                    "example": "admin789"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member promoted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Promote member to admin",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/members/{groupId}": {
      "get": {
        "operationId": "GroupController_getMembers",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "description": "ID of the group",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of members"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get group members (paginated)",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/admins/{groupId}": {
      "get": {
        "operationId": "GroupController_getAdmins",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "description": "ID of the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of admins retrieved successfully"
          },
          "404": {
            "description": "Group not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all admins of a group",
        "tags": [
          "Groups"
        ]
      }
    },
    "/api/v1/group/group/{userId}": {
      "get": {
        "operationId": "GroupController_getGroupsByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of groups retrieved successfully"
          },
          "404": {
            "description": "User not found or no groups found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all groups a user belongs to",
        "tags": [
          "Groups"
        ]
      }
    }
  },
  "info": {
    "title": "Suxch API",
    "description": "The API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterUserDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {}
      },
      "RequestChangePasswordDto": {
        "type": "object",
        "properties": {}
      },
      "ForgetPasswordDto": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "description": "The reset token sent to the user’s email for password reset",
            "example": "12345abcde"
          },
          "newPassword": {
            "type": "string",
            "description": "The new password for the user account",
            "example": "NewPassword123!",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirmation of the new password to ensure they match",
            "example": "NewPassword123!"
          }
        },
        "required": [
          "otp",
          "newPassword",
          "confirmPassword"
        ]
      },
      "VerifyOtpDto": {
        "type": "object",
        "properties": {}
      },
      "CreateGroupDTo": {
        "type": "object",
        "properties": {}
      },
      "UpdateGroupDetailsDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}